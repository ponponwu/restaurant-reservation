name: Deploy

on:
    push:
        branches: [main]
    workflow_dispatch: # 允許手動觸發部署

jobs:
    deploy-staging:
        runs-on: ubuntu-latest
        environment: staging
        if: github.ref == 'refs/heads/main'

        steps:
            - uses: actions/checkout@v4

            - name: Set up Ruby
              uses: ruby/setup-ruby@v1
              with:
                  ruby-version: '3.2.2'
                  bundler-cache: true

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '21.6.1'
                  cache: 'yarn'

            - name: Install dependencies
              run: |
                  bundle install --jobs 4 --retry 3
                  yarn install --frozen-lockfile

            - name: Precompile assets
              env:
                  RAILS_ENV: production
                  SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE_STAGING }}
              run: bundle exec rails assets:precompile

            - name: Build Docker image for staging
              env:
                  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
                  IMAGE_TAG: staging-${{ github.sha }}
              run: |
                  docker build -t $DOCKER_REGISTRY/restaurant-reservation:$IMAGE_TAG .
                  docker build -t $DOCKER_REGISTRY/restaurant-reservation:staging .

            - name: Login to Docker Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ secrets.DOCKER_REGISTRY }}
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Push Docker image
              env:
                  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
                  IMAGE_TAG: staging-${{ github.sha }}
              run: |
                  docker push $DOCKER_REGISTRY/restaurant-reservation:$IMAGE_TAG
                  docker push $DOCKER_REGISTRY/restaurant-reservation:staging

            - name: Deploy to staging server
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.STAGING_HOST }}
                  username: ${{ secrets.STAGING_USER }}
                  key: ${{ secrets.STAGING_SSH_KEY }}
                  script: |
                      cd /opt/restaurant-reservation
                      docker-compose pull
                      docker-compose down
                      docker-compose up -d
                      docker-compose exec -T web bundle exec rails db:migrate
                      docker-compose exec -T web bundle exec rails assets:precompile

            - name: Run health check
              run: |
                  sleep 30
                  curl -f ${{ secrets.STAGING_URL }}/health || exit 1

            - name: Notify staging deployment
              if: success()
              run: echo "🚀 Staging deployment successful!"

    deploy-production:
        runs-on: ubuntu-latest
        environment: production
        needs: deploy-staging
        if: github.ref == 'refs/heads/main'

        steps:
            - uses: actions/checkout@v4

            - name: Set up Ruby
              uses: ruby/setup-ruby@v1
              with:
                  ruby-version: '3.2.2'
                  bundler-cache: true

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '21.6.1'
                  cache: 'yarn'

            - name: Install dependencies
              run: |
                  bundle install --jobs 4 --retry 3
                  yarn install --frozen-lockfile

            - name: Precompile assets
              env:
                  RAILS_ENV: production
                  SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE_PRODUCTION }}
              run: bundle exec rails assets:precompile

            - name: Build Docker image for production
              env:
                  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
                  IMAGE_TAG: production-${{ github.sha }}
              run: |
                  docker build -t $DOCKER_REGISTRY/restaurant-reservation:$IMAGE_TAG .
                  docker build -t $DOCKER_REGISTRY/restaurant-reservation:production .
                  docker build -t $DOCKER_REGISTRY/restaurant-reservation:latest .

            - name: Login to Docker Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ secrets.DOCKER_REGISTRY }}
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Push Docker image
              env:
                  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
                  IMAGE_TAG: production-${{ github.sha }}
              run: |
                  docker push $DOCKER_REGISTRY/restaurant-reservation:$IMAGE_TAG
                  docker push $DOCKER_REGISTRY/restaurant-reservation:production
                  docker push $DOCKER_REGISTRY/restaurant-reservation:latest

            - name: Create database backup
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.PRODUCTION_HOST }}
                  username: ${{ secrets.PRODUCTION_USER }}
                  key: ${{ secrets.PRODUCTION_SSH_KEY }}
                  script: |
                      cd /opt/restaurant-reservation
                      docker-compose exec -T db pg_dump -U postgres restaurant_reservation_production > backup_$(date +%Y%m%d_%H%M%S).sql

            - name: Deploy to production server
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.PRODUCTION_HOST }}
                  username: ${{ secrets.PRODUCTION_USER }}
                  key: ${{ secrets.PRODUCTION_SSH_KEY }}
                  script: |
                      cd /opt/restaurant-reservation
                      docker-compose pull
                      docker-compose down
                      docker-compose up -d
                      docker-compose exec -T web bundle exec rails db:migrate
                      docker-compose exec -T web bundle exec rails assets:precompile
                      docker-compose exec -T web bundle exec rails tmp:cache:clear

            - name: Run production health check
              run: |
                  sleep 60
                  curl -f ${{ secrets.PRODUCTION_URL }}/health || exit 1

            - name: Notify production deployment
              if: success()
              run: echo "🎉 Production deployment successful!"

            - name: Rollback on failure
              if: failure()
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.PRODUCTION_HOST }}
                  username: ${{ secrets.PRODUCTION_USER }}
                  key: ${{ secrets.PRODUCTION_SSH_KEY }}
                  script: |
                      cd /opt/restaurant-reservation
                      docker-compose down
                      # 這裡可以加入回滾到上一個版本的邏輯
                      echo "❌ Deployment failed, manual rollback required"
